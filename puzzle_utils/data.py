"""
General data dictionaries
"""

# "*" for raised dot; dots are in canonical Braille order, i.e.
#   1 4
#   2 5
#   3 6
# There are a lot of other ways you could encode Braille: as binary (with 1s
# and 0s for *s and .s); as two-digit octal...but this is what I use.

BRAILLE_TO_LETTER = {
    '*.....': 'A', '**....': 'B', '*..*..': 'C', '*..**.': 'D', '*...*.': 'E',
    '**.*..': 'F', '**.**.': 'G', '**..*.': 'H', '.*.*..': 'I', '.*.**.': 'J',
    '*.*...': 'K', '***...': 'L', '*.**..': 'M', '*.***.': 'N', '*.*.*.': 'O',
    '****..': 'P', '*****.': 'Q', '***.*.': 'R', '.***..': 'S', '.****.': 'T',
    '*.*..*': 'U', '***..*': 'V', '.*.***': 'W', '*.**.*': 'X', '*.****': 'Y',
    '*.*.**': 'Z'
}

LETTER_TO_BRAILLE = {y: x for x, y in BRAILLE_TO_LETTER.items()}

MORSE_TO_LETTER = {
    '.-': 'A',   '-...': 'B', '-.-.': 'C', '-..': 'D',  '.': 'E',
    '..-.': 'F', '--.': 'G',  '....': 'H', '..': 'I',   '.---': 'J',
    '-.-': 'K',  '.-..': 'L', '--': 'M',   '-.': 'N',   '---': 'O',
    '.--.': 'P', '--.-': 'Q', '.-.': 'R',  '...': 'S',  '-': 'T',
    '..-': 'U',  '...-': 'V', '.--': 'W',  '-..-': 'X', '-.--': 'Y',
    '--..': 'Z'
}

LETTER_TO_MORSE = {y: x for x, y in MORSE_TO_LETTER.items()}

SCRABBLE_VALUES = {
    'A': 1, 'B': 3, 'C': 3, 'D': 2, 'E': 1, 'F': 4, 'G': 2, 'H': 4, 'I': 1,
    'J': 8, 'K': 5, 'L': 1, 'M': 3, 'N': 1, 'O': 1, 'P': 3, 'Q': 10, 'R': 1,
    'S': 1, 'T': 1, 'U': 1, 'V': 4, 'W': 4, 'X': 8, 'Y': 4, 'Z': 10
}

# Uses directions on a numpad:
#   7  8  9
#    \ | /
#   4-- --6
#    / | \
#   1  2  3
# with order irrelevant.
SEMAPHORE_TO_LETTER = {
    '22': ' ', '89': '#', '98': '#',
    '21': 'A', '12': 'A', '24': 'B', '42': 'B', '27': 'C', '72': 'C',
    '28': 'D', '82': 'D', '29': 'E', '92': 'E', '26': 'F', '62': 'F',
    '23': 'G', '32': 'G', '14': 'H', '41': 'H', '17': 'I', '71': 'I',
    '68': 'J', '86': 'J', '18': 'K', '81': 'K', '19': 'L', '91': 'L',
    '16': 'M', '61': 'M', '13': 'N', '31': 'N', '47': 'O', '74': 'O',
    '48': 'P', '84': 'P', '49': 'Q', '94': 'Q', '46': 'R', '64': 'R',
    '43': 'S', '34': 'S', '78': 'T', '87': 'T', '79': 'U', '97': 'U',
    '83': 'V', '38': 'V', '69': 'W', '96': 'W', '39': 'X', '93': 'X',
    '76': 'Y', '67': 'Y', '36': 'Z', '63': 'Z',
}

# The following is calculated from the Brown Corpus.  Probably with more
# precision than is necessary, but that shouldn't hurt anyone.
LETTER_FREQUENCY = {
    'A': 0.0804344893667011, 'B': 0.015319347278013538,
    'C': 0.03098552778708366, 'D': 0.03968865648458872,
    'E': 0.12509913667445827, 'F': 0.023115601014703575,
    'G': 0.019510688606454475, 'H': 0.05426029633448149,
    'I': 0.07292152850650402, 'J': 0.001610251909007679,
    'K': 0.006573999075815042, 'L': 0.04135864899273761,
    'M': 0.025411919874979604, 'N': 0.07100011884790572,
    'O': 0.07597547637850377, 'P': 0.02019548897258202,
    'Q': 0.001066253591032746, 'R': 0.06135232873288501,
    'S': 0.06549448433835808, 'T': 0.09255212050628786,
    'U': 0.027158962979194016, 'V': 0.00994754859834411,
    'W': 0.01879591239199459, 'X': 0.0019826279404037916,
    'Y': 0.017238012668806774, 'Z': 0.0009505721481727293
}

# Bigrams with a frequency over .003 (including those bridging words)
BIGRAM_FREQUENCY = {
    'TH': 0.029942031219740088, 'HE': 0.026412958325210643,
    'IN': 0.019118017894329802, 'ER': 0.017696182439061677,
    'AN': 0.01582702076682603, 'RE': 0.014753010804369405,
    'ES': 0.013491529520434267, 'ON': 0.013311531429310821,
    'EN': 0.012182433083093995, 'ST': 0.012041295789816891,
    'NT': 0.01203168735078895, 'AT': 0.011767989079688764,
    'ED': 0.011599734636266136, 'TI': 0.011041377568309063,
    'ND': 0.010884866772587251, 'TO': 0.010564158429921276,
    'OR': 0.010225727855270431, 'EA': 0.009707512710363428,
    'TE': 0.009604382131463517, 'IS': 0.009018480871626343,
    'IT': 0.00896979811388477, 'HA': 0.0088745678070745,
    'AR': 0.008804319441736881, 'OF': 0.008721900386963868,
    'NG': 0.008397135147819429, 'AL': 0.00833927099278449,
    'AS': 0.008258560104949776, 'OU': 0.007881268732452588,
    'ET': 0.007798209115077712, 'SE': 0.007450383622266212,
    'HI': 0.00729408634741169, 'LE': 0.007034872014524543,
    'RO': 0.006656513037690917, 'VE': 0.006560642168278785,
    'RA': 0.006464344257132077, 'NE': 0.0064472625877490695,
    'ME': 0.006429753876631486, 'DE': 0.006368473387719945,
    'TA': 0.006125273119879369, 'SI': 0.006118013410391591,
    'CO': 0.006055665317143612, 'SA': 0.006034526751282139,
    'RI': 0.006028975208732662, 'EC': 0.0060114664976150785,
    'SO': 0.0057479817473821805, 'IO': 0.005513108793365821,
    'EL': 0.005448839012312254, 'LI': 0.005312826219850053,
    'LL': 0.005301936655618385, 'IC': 0.005265424587312206,
    'DI': 0.005175745823051414, 'NO': 0.00508094255797572,
    'OT': 0.004960089747090939, 'MA': 0.004915677406695118,
    'CE': 0.0049056419259326, 'OM': 0.004876176046246912,
    'NA': 0.004833685393656679, 'TT': 0.0048099845773877555,
    'NS': 0.004809771056520468, 'BE': 0.004781372781171218,
    'LA': 0.0047132596245064735, 'EM': 0.004711978499302748,
    'RT': 0.004684434307422648, 'CH': 0.004681658536147908,
    'SS': 0.004627851277591433, 'EE': 0.004582371332859174,
    'HO': 0.004550556723633322, 'RS': 0.0043180324991571265,
    'FO': 0.004218318254133818, 'CA': 0.004213834315920778,
    'WA': 0.004202517709954535, 'AC': 0.004091913900699558,
    'UR': 0.00403661199607207, 'SH': 0.00392899747895912,
    'NI': 0.0039243000198787925, 'DT': 0.0038867203472361753,
    'EW': 0.0038482865911244075, 'TS': 0.0038201018366424444,
    'AD': 0.0037741948501756103, 'LY': 0.003773767808441035,
    'EI': 0.003754550930385151, 'IL': 0.0037511345965085493,
    'PE': 0.0037201740707518477, 'NC': 0.003703519443103415,
    'US': 0.0037013842344305386, 'DA': 0.003613413637108048,
    'FT': 0.003606367448487557, 'UT': 0.00360252407287638,
    'LO': 0.0035909939460428498, 'EO': 0.0035788232566074567,
    'TR': 0.0035318486658041845, 'EP': 0.00347889549071686,
    'UN': 0.003363167180646981, 'WI': 0.00332857680014639,
    'PR': 0.003313630339436258, 'WH': 0.0032924917735747856,
    'OW': 0.003266655748632986, 'EF': 0.0031891476738075872,
    'OL': 0.003117831704133529, 'CT': 0.003108436785972875,
    'GE': 0.0030998959512813706, 'WE': 0.0030905010331207165,
    'MO': 0.0030409641919099933, 'DO': 0.003029220544209175,
    'OS': 0.0030236690016596976
}

# Y is a vowel.  This is from the Four-Text Corpus

CV_FREQUENCY = {'CC': 0.21517839934844915, 'VC': 0.36096165921652251,
                'CV': 0.36102880377004232, 'VV': 0.062831137664985978}
